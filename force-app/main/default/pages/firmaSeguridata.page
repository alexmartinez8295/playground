<apex:page controller="contollerFirmaSeguridata" showHeader="false" doctype="html-5.0">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" />
        <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css" />
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>

        <apex:includeScript value="https://maps.google.com/maps/api/js?key=AIzaSyCf9mN4WAAx9ByCURWWXt1r5amQvEIZ-Yw&libraries=places" />

        <apex:stylesheet value="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;700" />
        <apex:stylesheet value="https://fonts.googleapis.com/icon?family=Material+Icons" />
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
            crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
            integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
            crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
        <script src="https://unpkg.com/materialize-stepper@3.0.0-beta.1.0.1/dist/js/mstepper.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
    </head>
    
    <body>
        <div class="mainContetDiv">
            <div id="content-wrapper" role="main">
                <div id="content" class="canvasDivContainer">
                    <div class="image">
                        <div class="signCaptureCanvas"></div>
                    </div>
                    <div class="image" style="display:none">
                        <div class="signCaptureCanvas"></div>
                    </div>
                </div>
            </div>
            <br/>
            <div class="buttonContainer">
                <button id="saveSignCapture" class="btn btn-success cleanButton">Guardar Imagenes y comparar</button>
                <a id="down" href="#" style="display: none">Hidden</a>
            </div>
            <br/>
            <div class="chartsContainer">
                <div class=".divChartContainer">
                    <canvas id="xAxisChart"></canvas>
                </div>
                
                <div class=".divChartContainer">
                    <canvas id="yAxisChart"></canvas>
                </div>
                
                <div class=".divChartContainer">
                    <canvas id="timeTraceChart"></canvas>
                </div>
            </div>
        </div>
    </body>
    <script>
        var ctx_X = document.getElementById("xAxisChart").getContext("2d"),
            ctx_Y = document.getElementById("yAxisChart").getContext("2d"),
            ctx_T = document.getElementById("timeTraceChart").getContext("2d");

        function Line() {
            this.tension = 0
        }

        function Title() {
            this.display = !0, this.text
        }

        function Tooltips() {
            this.mode = "index", this.intersect = !0
        }

        function Hover() {
            this.mode = "nearest", this.intersect = !0
        }

        function ScaleLabel() {
            this.display = !0, this.labelString
        }

        function AxisData() {
            this.display = !0, this.scaleLabel = new ScaleLabel
        }

        function Scales() {
            this.xAxes = [new AxisData], this.yAxes = [new AxisData]
        }
        var canvas_simple, myChart_X, myChart_Y, myChart_T, Options = function () {
            this.responsive = !0, this.line = new Line, this.title = new Title, this.tooltips = new Tooltips, this.hover = new Hover, this.scales = new Scales
        },
            DataSet = function () {
                this.label, this.data = [], this.backgroundColor, this.borderColor, this.borderWidth = 1, this.fill = !1
            },
            canvasWidth = 300,
            canvasHeight = 200,
            lineWidth = 8,
            radius = 3,
            currentColor = "#000",
            clickX_simple = [],
            clickY_simple = [],
            time_simple = [],
            clickDrag_simple = [],
            paint_simple = [],
            context_simple = [],
            labels = [];

        function executeArticleScript() {
            prepareSimpleCanvas()
        }

        function prepareSimpleCanvas() {
            var e = $(".signCaptureCanvas");

            function t(e) {
                return $.each(e, function (e) {
                    labels[e] = e
                }), labels
            }

            function a(e) {
                var t, a = new Array,
                    i = e.length - 1 - 1;
                return $.each(e, function (n) {
                    t = Math.abs(e[i + 1].getTime() - e[i].getTime()), a.push(t), 0 != i && (i -= 1)
                }), a
            }

            function i(e) {
                var t, a, i = 0,
                    n = new Array;
                return $.each(e, function (e, t) {
                    t > i && (i = t)
                }), t = i, $.each(e, function (e, a) {
                    a < t && (t = a)
                }), $.each(e, function (e, l) {
                    a = (l - t) / (i - t) * 100, n.push(a)
                }), n
            }
            $.each(e, function (e, t) {
                canvasDiv = t, clickX_simple[e] = new Array, clickY_simple[e] = new Array, time_simple[e] = new Array, clickDrag_simple[e] = new Array, time_simple[e] = new Array;
                var a, i, n, l = "idSignCaptureCanvas" + e;
                (canvas_simple = document.createElement("canvas")).setAttribute("width", canvasWidth), canvas_simple.setAttribute("height", canvasHeight), canvas_simple.setAttribute("id", l), canvas_simple.setAttribute("class", "drawnCanvas"), canvas_simple.setAttribute("index", e),  canvas_simple.setAttribute("style", "border:solid"), canvasDiv.appendChild(canvas_simple), button_clear = document.createElement("button"), button_clear.setAttribute("class", "btn btn-danger cleanButton"), button_clear.setAttribute("type", "button"), button_clear.setAttribute("index", e), button_clear.setAttribute("id", "idCleanButton" + e), $(button_clear).html("Limpiar"), $(button_clear).insertAfter(canvasDiv), "undefined" != typeof G_vmlCanvasManager && (canvas_simple = G_vmlCanvasManager.initElement(canvas_simple)), context_simple[e] = canvas_simple.getContext("2d"), a = l, i = e, $("#" + a).mousedown(function (e) {
                    var t = $(this).offset(),
                        a = e.pageX - t.left,
                        n = e.pageY - t.top;
                    paint_simple[i] = !0, addClickSimple(a, n, !1, i), redrawSimple(i)
                }), $("#" + a).mousemove(function (e) {
                    var t = $(this).offset();
                    paint_simple[i] && (addClickSimple(e.pageX - t.left, e.pageY - t.top, !0, i), redrawSimple(i))
                }), $("#" + a).mouseup(function (e) {
                    paint_simple[i] = !1, redrawSimple(i)
                }), $("#" + a).mouseleave(function (e) {
                    paint_simple[i] = !1
                }), $("#idCleanButton" + i).mousedown(function (e) {
                    var t = getIndexFromEvent(e);
                    clickX_simple[t] = new Array, clickY_simple[t] = new Array, clickDrag_simple[t] = new Array, time_simple[t] = new Array, void 0 != myChart_X && void 0 != myChart_Y && void 0 != myChart_T && (myChart_X.destroy(), myChart_Y.destroy(), myChart_T.destroy()), clearCanvas_simple(t)
                }), (n = canvas_simple).addEventListener("touchstart", function (e) {
                    var t = (e.changedTouches ? e.changedTouches[0].pageX : e.pageX) - this.offsetLeft,
                        a = (e.changedTouches ? e.changedTouches[0].pageY : e.pageY) - this.offsetTop,
                        i = getIndexFromEvent(e);
                    paint_simple[i] = !0, addClickSimple(t, a, !1, i), redrawSimple(i)
                }, !1), n.addEventListener("touchmove", function (e) {
                    var t = (e.changedTouches ? e.changedTouches[0].pageX : e.pageX) - this.offsetLeft,
                        a = (e.changedTouches ? e.changedTouches[0].pageY : e.pageY) - this.offsetTop,
                        i = getIndexFromEvent(e);
                    paint_simple[i] && (addClickSimple(t, a, !0, i), redrawSimple(i)), e.preventDefault()
                }, !1), n.addEventListener("touchend", function (e) {
                    var t = getIndexFromEvent(e);
                    paint_simple[t] = !1, redrawSimple(t)
                }, !1), n.addEventListener("touchcancel", function (e) {
                    var t = getIndexFromEvent(e);
                    paint_simple[t] = !1
                }, !1)
            }), $("#saveSignCapture").mousedown(function (e) {
        var n = $("canvas.drawnCanvas");
                var canvasImg;
                canvasImg = document.getElementById('idSignCaptureCanvas0');
                var strDataURI = canvasImg.toDataURL();
                console.log('strDataURI1: )' + strDataURI);
                strDataURI = strDataURI = strDataURI.replace(/^data:image\/(png|jpg);base64,/, "");
                console.log('strDataURI2: )' + strDataURI);
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.contollerFirmaSeguridata.guardaFirma}',strDataURI,
                    function (result, event) {
                      if (event.statusCode == 200) {
                        console.log('OK imagen');
                      }
                    }, { escape : false });
                                                              
        $.each(n, function(e, t) {
                setWhiteBackground(context_simple[e], this);
                t.toDataURL("image/png").replace("image/png", "image/octet-stream");
                console.log('clickX_simple: ' + clickX_simple);
                console.log('clickY_simple: ' + clickY_simple);
                console.log('time_simple: ' + time_simple);
                }),
            function() {
                void 0 != myChart_X && void 0 != myChart_Y && void 0 != myChart_T && (myChart_X.destroy(), myChart_Y.destroy(), myChart_T.destroy());
                var e = t(clickX_simple[0].length > clickX_simple[1].length ? clickX_simple[0] : clickX_simple[1]),
                    n = t(clickY_simple[0].length > clickY_simple[1].length ? clickY_simple[0] : clickY_simple[1]),
                    l = t(time_simple[0].length > time_simple[1].length ? time_simple[0] : time_simple[1]),
                    s = new Options,
                    r = new Options,
                    c = new Options,
                    o = [new DataSet, new DataSet],
                    p = [new DataSet, new DataSet],
                    m = [new DataSet, new DataSet];
                s.title.text = "Comparación de Coordenada X primera y segunda captura", o[0].label = "Cooredena X primera captura", o[1].label = "Cooredena X segunda captura", o[0].data = i(clickX_simple[0]), o[1].data = i(clickX_simple[1]), o[0].backgroundColor = "#4040ff", o[1].backgroundColor = "#ea2400", o[0].borderColor = "#4040ff", o[1].borderColor = "#ea2400", r.title.text = "Comparación de Coordenada Y primera y segunda captura", p[0].label = "Cooredena Y primera captura", p[1].label = "Cooredena Y segunda captura", p[0].data = i(clickY_simple[0]), p[1].data = i(clickY_simple[1]), p[0].backgroundColor = "#4040ff", p[1].backgroundColor = "#ea2400", p[0].borderColor = "#4040ff", p[1].borderColor = "#ea2400", c.title.text = "Comparación de tiempo entre trazos captura", m[1].label = "Tiempo de trazo en segunda captura", m[0].label = "Tiempo de trazo en primera captura", m[0].data = a(time_simple[0]), m[1].data = a(time_simple[1]), m[0].backgroundColor = "#4040ff", m[1].backgroundColor = "#ea2400", m[0].borderColor = "#4040ff", m[1].borderColor = "#ea2400", myChart_X = new Chart(ctx_X, {
                    type: "line",
                    data: {
                        labels: e,
                        datasets: o
                    },
                    options: s
                }), myChart_Y = new Chart(ctx_Y, {
                    type: "line",
                    data: {
                        labels: n,
                        datasets: p
                    },
                    options: r
                }), myChart_T = new Chart(ctx_T, {
                    type: "line",
                    data: {
                        labels: l,
                        datasets: m
                    },
                    options: c
                })
            }()
                    console.log('a(time_simple[0]: )' + a(time_simple[0]));
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.contollerFirmaSeguridata.actualizarTiempo}',a(time_simple[0]),
                    function (result, event) {
                      if (event.statusCode == 200) {
                        console.log('OK tiempo');
                      }
                    }, { escape : false });
                
                    console.log('i(clickX_simple[0]): )' + i(clickX_simple[0]));
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.contollerFirmaSeguridata.actualizarCoordenadasX}',i(clickX_simple[0]),
                    function (result, event) {
                      if (event.statusCode == 200) {
                        console.log('OK coordenadasX');
                      }
                    }, { escape : false });
                
                    console.log('i(clickY_simple[0]): )' +i(clickY_simple[0]));
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.contollerFirmaSeguridata.actualizarCoordenadasY}',i(clickY_simple[0]),
                    function (result, event) {
                      if (event.statusCode == 200) {
                        console.log('OK coordenadasY');
                      }
                    }, { escape : false });
            })
        }

        function addClickSimple(e, t, a, i) {
            clickX_simple[i].push(e), clickY_simple[i].push(t), time_simple[i].push(new Date), clickDrag_simple[i].push(a)
        }

        function clearCanvas_simple(e) {
            context_simple[e].clearRect(0, 0, canvasWidth, canvasHeight)
        }

        function redrawSimple(e) {
            clearCanvas_simple(e), context_simple[e].strokeStyle = currentColor, context_simple[e].lineJoin = "round", context_simple[e].lineWidth = radius;
            for (var t = 0; t < clickX_simple[e].length; t++) context_simple[e].beginPath(), clickDrag_simple[e][t] && t ? context_simple[e].moveTo(clickX_simple[e][t - 1], clickY_simple[e][t - 1]) : context_simple[e].moveTo(clickX_simple[e][t] - 1, clickY_simple[e][t]), console.log("Panel de captura " + (e + 1) + "Coordenada X :" + clickX_simple[e][t] + " Coordenada Y :" + clickY_simple[e][t] + "Tiempo Unix de captura :" + time_simple[e][t]), context_simple[e].lineTo(clickX_simple[e][t], clickY_simple[e][t]), context_simple[e].closePath(), context_simple[e].stroke()
        }

        function setWhiteBackground(e, t) {
            for (var a = e.getImageData(0, 0, t.width, t.height), i = a.data, n = 0; n < i.length; n += 4) i[n + 3] < 255 && (i[n] = 255, i[n + 1] = 255, i[n + 2] = 255, i[n + 3] = 255);
            e.putImageData(a, 0, 0)
        }

        function getIndexFromEvent(e) {
            var t = e.currentTarget;
            return index = $(t).attr("index"), index
        }
        
        executeArticleScript();
    </script>
</apex:page>